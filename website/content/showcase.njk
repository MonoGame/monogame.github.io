---
title: Showcase
pagination:
    data: collections.gameTags
    size: 1
    alias: showcaseCategory
permalink: showcase/{{ (showcaseCategory | slugify) if showcaseCategory !== "all" }}/
---
{% extends "layouts/base.layout.njk" %}
{% from 'macros/create_category_filter.njk' import create_category_filter %}

{% block content %}
    <section class="container-xxl my-5">
        <h1 id="monogame-showcase" class="fw-bold"><a href="#monogame-showcase">MonoGame Showcase</a></h1>
        <p>
            There have been 1000s of games, libraries, and tools made using MonoGame over the years.
            We have gathered a taste of those titles here from the big hits to the small hidden gems.
        </p>
        <p>
            If you are a developer and would like us to add your game, library, or tool to this list, please
            <a href="#" id="toggleFormLink">submit your details here</a>.
        </p>

        <!-- Submission Form -->
        <div id="submissionFormContainer"
        style="display: none; margin-top: 20px; width: 40%; margin-left: auto; margin-right: auto;"">
            <form id="submission-form" class="mt-4">
                <div class="mb-3">
                    <label for="gameTitle" class="form-label">Title</label>
                    <input type="text" class="form-control" id="gameTitle" name="title" required>
                </div>
                <div class="mb-3">
                    <input type="checkbox" id="ownWork" name="ownwork" required> <label for="ownWork" class="form-label">This game/tool/library is my own work</label>
                </div>
                <div class="mb-3">
                    <input type="checkbox" id="hasShipped" name="hasshipped" required> <label for="hasShipped" class="form-label">This game/tool/library has shipped and is available for users.</label>
                </div>
                <div class="mb-3">
                    <label for="type" class="form-label">Type</label>
                    <select class="form-select" id="type" name="type" required>
                        <option value="Game" selected>Game</option>
                        <option value="Library">Library</option>
                        <option value="Tool">Tool</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="gameURL" class="form-label">URL</label>
                    <input type="text" class="form-control" id="gameURL" name="url" value="https://" required>
                </div>
                <div class="mb-3">
                    <label for="developerName" class="form-label">Developer Name</label>
                    <input type="text" class="form-control" id="developerName" name="developer" required>
                </div>
                <div class="mb-3">
                    <label for="email" class="form-label">Contact Email</label>
                    <input type="email" class="form-control" id="email" name="email" placeholder="developer@gameCo.com" required>
                </div>
                <div class="mb-3">
                    <label for="tags" class="form-label">Tags (comma-separated)</label>
                    <input type="text" class="form-control" id="tags" name="tags">
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea class="form-control" id="description" name="description" rows="4" required></textarea>
                </div>
                <div id="image-grid" class="mg-item-grid">
                    <div class="mb-3">
                        <label for="screenshotUpload">Upload Screenshot</label>
                        <div id="screenshotDropzone" class="dropzone">
                            <p>Drag and drop your screenshot here, or click to select it.</p>
                            <input type="file" id="screenshotUpload" name="files" accept="image/*" multiple hidden>
                        </div>
                        <ul id="screenshotFileList" class="file-list"></ul>
                        <small class="screenshot-error-message"></small>
                    </div>
                    <div class="mb-3">
                        <label for="logoUpload">Upload Logo</label>
                        <div id="logoDropzone" class="dropzone">
                            <p>Drag and drop your logo here, or click to select it.</p>
                            <input type="file" id="logoUpload" name="files" accept="image/*" multiple hidden>
                        </div>
                        <ul id="logoFileList" class="file-list"></ul>
                        <small class="logo-error-message"></small>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="previewContainer" class="form-label">Screenshot and Logo preview</label>
                    <div id="previewContainer" class="preview-container" style="display: block;">
                        <div id="previewContainerScreenshot" class="mg-card-thumbnail"
                            style="background-image: ;">
                        </div>
                        <div id="previewContainerLogo" class="mg-card-thumbnail-overlay"
                            style="background-image: ;">
                        </div>
                    </div>
                </div>
                <br />
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </section>

    {{ create_category_filter(collections.gameTags, "/showcase/", page.url) }}

    <section class="container-xxl mb-5">
        <div id="showcase-gallery" class="mg-item-grid">
            {% for game in games %}
                {% if showcaseCategory in game.tags or showcaseCategory === "all" %}
                    <a class="mg-no-link hide-external-icon showcase-item" href="{{ game.url }}" title="{{ game.title }}">
                        <div class="mg-card mg-box-shadow d-flex flex-column">
                            <div class="mg-card-thumbnail"
                                 style="background-image: url('/images/showcase-header/{{ game.screenshot }}');
                                        image-rendering: {{ "pixelated" if game.pixelart else "auto"}}">
                            </div>
                            <div class="mg-card-thumbnail-overlay"
                                style="background-image: url('/images/showcase-header/{{ game.logo }}');"></div>
                        </div>
                    </a>
                {% endif %}
            {% endfor %}
        </div>
    </section>
{% endblock %}

{% block scripts %}
    <script type="text/javascript" src="/js/showcaseRandomizer.js"></script>

    <script>
        document.getElementById('toggleFormLink').addEventListener('click', function (e) {
                e.preventDefault(); // Prevent the default link behavior
                const formContainer = document.getElementById('submissionFormContainer');
                formContainer.style.display = formContainer.style.display === 'none' ? 'block' : 'none';
            });

        document.getElementById('submission-form').addEventListener('submit', async function (e) {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/api/submit-game', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    alert('Your game has been submitted successfully!');
                    form.reset();
                } else {
                    alert('There was an error submitting your game. Please try again later.');
                }
            } catch (error) {
                console.error('Submission error:', error);
                alert('Failed to submit. Please check your internet connection.');
            }
        });
    </script>

    <script>
        const screenshotUpload = document.getElementById('screenshotUpload');
        const screenshotDropzone = document.getElementById('screenshotDropzone');
        const previewContainerScreenshot = document.getElementById('previewContainerScreenshot');

        const logoUpload = document.getElementById('logoUpload');
        const logoDropzone = document.getElementById('logoDropzone');
        const previewContainerLogo = document.getElementById('previewContainerLogo');

        // Function to handle screenshot upload and preview
        function handleScreenshotPreview(file) {
            if (!file.type.startsWith('image/')) {
                alert('Only image files are allowed for screenshots.');
                return;
            }

            const reader = new FileReader();
            reader.onload = (e) => {
                // Set the screenshot background
                previewContainerScreenshot.style.backgroundImage = `url(${e.target.result})`;
                previewContainerScreenshot.style.display = 'block';
            };
            reader.readAsDataURL(file);

            // Update placeholder text with file name
            screenshotDropzone.querySelector('p').textContent = `Uploaded: ${file.name}`;
        }

        // Function to handle logo upload and preview
        function handleLogoPreview(file) {
            if (!file.type.startsWith('image/')) {
                alert('Only image files are allowed for logos.');
                return;
            }

            const reader = new FileReader();
            reader.onload = (e) => {
                // Set the logo background
                previewContainerLogo.style.backgroundImage = `url(${e.target.result})`;
                previewContainerLogo.style.display = 'block';
            };
            reader.readAsDataURL(file);

            // Update placeholder text with file name
            logoDropzone.querySelector('p').textContent = `Uploaded: ${file.name}`;
        }

        // Event listeners for screenshot file input and dropzone
        screenshotUpload.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) handleScreenshotPreview(file);
        });

        screenshotDropzone.addEventListener('click', () => {
            screenshotUpload.click(); // Trigger file input dialog
        });

        screenshotDropzone.addEventListener('drop', (e) => {
            e.preventDefault();
            screenshotDropzone.classList.remove('dragover');
            const file = e.dataTransfer.files[0];
            if (file) handleScreenshotPreview(file);
        });

        // Event listeners for logo file input and dropzone
        logoUpload.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) handleLogoPreview(file);
        });

        logoDropzone.addEventListener('click', () => {
            logoUpload.click(); // Trigger file input dialog
        });

        logoDropzone.addEventListener('drop', (e) => {
            e.preventDefault();
            logoDropzone.classList.remove('dragover');
            const file = e.dataTransfer.files[0];
            if (file) handleLogoPreview(file);
        });

        // Optional: Add dragover class for better UX
        [screenshotDropzone, logoDropzone].forEach((dropzone) => {
            dropzone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropzone.classList.add('dragover');
            });

            dropzone.addEventListener('dragleave', () => {
                dropzone.classList.remove('dragover');
            });
        });
    </script>
{% endblock %}
